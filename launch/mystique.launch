<launch>
  <arg name="namespace" default="ben"/>
  <arg name="operator_ip" default="192.168.100.142"/>
  <arg name="logDirectory" default="$(find project11)/logs"/>
  <arg name="log_lidar" default="false"/>
  
  <include file="$(find ben_project11)/launch/ben_core.launch">
      <arg name="namespace" value="$(arg namespace)"/>
  </include>
    
  <node pkg="cw4_helm" type="cw4_helm_node" name="asv_helm" ns="$(arg namespace)"/>
    
  <node pkg="control_by_web_x4xx_interface" type="cbw_x4xx_node.py" name="control_by_web_x4xx_interface" ns="$(arg namespace)"/>

  <!-- <node pkg="flir" type="flir_node.py" name="flir_engine" ns="$(arg namespace)">
    <param name="baseURL" value="http://192.168.10.63/"/>
  </node> -->

  <group ns="$(arg namespace)">
    <group ns="sensors/radar">
      <node pkg="halo_radar" type="halo_radar" name="halo_radar">
        <rosparam param="hostIPs">["192.168.10.112", "192.168.99.112" ]</rosparam>
        <param name="frameId" value="$(arg namespace)/radar"/>
      </node>

      <group ns="HaloA">
        <node pkg="marine_radar_tracker" type="marine_radar_tracker" name="marine_radar_tracker">
          <param name="map_frame" value="$(arg namespace)/map"/>
          <remap from="radar_data" to="data"/>
          <param name="minimum_range" value="10.0"/>
        </node>

        <node pkg="marine_radar_tracker" type="marine_radar_to_pointcloud" name="marine_radar_to_pointcloud">
          <remap from="radar_data" to="data"/>
        </node>
      </group>
    </group>

  </group>

  <include file="$(find ben_hardware)/launch/load_all_panos_params.launch" ns="$(arg namespace)/sensors/cameras">
    <arg name="namespace" value="$(arg namespace)"/>
  </include>

    <node pkg="posmv" type="posmv_node.py" name="posmv" ns="$(arg namespace)/sensors"/>

    <node pkg="kongsberg_em_control" type="kongsberg_em_control_node.py" name="kongsberg_em_control" ns="$(arg namespace)"/>
    <node pkg="kongsberg_em_control" type="endofline_listener.py" name="endofline_listener" ns="$(arg namespace)"/>


    <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch" ns="$(arg namespace)/sensors/lidar">
      <arg name="frame_id" value="$(arg namespace)/lidar"/>
      <arg name="manager" value="$(arg namespace)_lidar_nodelet_manager"/>
    </include>

    <node pkg="pointcloud2_spherical_filter" type="pointcloud2_spherical_filter_node" name="sperical_filter" ns="$(arg namespace)/sensors/lidar"> 
      <rosparam param="excludes">[{min: 0.0, max: 2.0}, {min: 34.0, max: 40.5}]</rosparam>
      <remap from="input" to="velodyne_points"/>
      <remap from="output" to="velodyne_points_filtered"/>
    </node>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server" ns="$(arg namespace)/sensors/lidar">
      <remap from="cloud_in" to="velodyne_points_filtered"/>
      <param name="resolution" value="1.0"/>
      <param name="frame_id" value="$(arg namespace)/map"/>
    </node>

    <node pkg="libsensors_monitor" type="libsensors_monitor" name="mystique_monitoring" ns="$(arg namespace)">
    </node>

    <node pkg="mbr" type="mbr_logging.py" name="mbr_logging" ns="$(arg namespace)"/>

    <node pkg="starlink_stats_ros" type="starlink_diagnostics_node.py" name="starlink_diagnostics"/>

    <include file="$(find ben_hardware)/launch/loggers.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>
    
    <include file="$(find ben_project11)/launch/log_throttled_panos.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>

    <include if="$(arg log_lidar)" file="$(find ben_project11)/launch/log_lidar.launch">
        <arg name="namespace" value="$(arg namespace)"/>
        <arg name="logDirectory" value="$(arg logDirectory)"/>
    </include>
    
    <node pkg="nmea_navsat_driver" type="nmea_topic_serial_reader" name="nmea_reader" ns="$(arg namespace)">
      <param name="port" value="/dev/ttyACM0"/>
      <param name="baud" value="38400"/>
      <remap from="nmea_sentence" to="sensors/nmea_sentence"/>
    </node>

    <include file="$(find ben_hardware)/launch/all_panos_thumbnails.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    <node pkg="cw4_nmea2000" type="nmea_conv_node.py" name="nmea_conv" ns="$(arg namespace)"/>

    <rosparam command="load" file="$(find ben_project11)/config/ben.yaml" ns="$(arg namespace)"/>
    <rosparam command="load" file="$(find ben_hardware)/config/ben.yaml" ns="$(arg namespace)"/>
    <param name="/$(arg namespace)/udp_bridge/remotes/operator/host" value="$(arg operator_ip)"/>
    <rosparam command="load" file="$(find ccomjhc_project11)/configuration/mbr.yaml" ns="$(arg namespace)"/>
</launch>
